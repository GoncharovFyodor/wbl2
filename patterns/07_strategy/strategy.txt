 Паттерн "Стратегия" (Strategy) - это поведенческий паттерн проектирования, позволяющий определить семейство
алгоритмов, инкапсулировать каждый из них и сделать их взаимозаменяемыми. Этот паттерн позволяет клиентскому коду
выбирать необходимый алгоритм из семейства и использовать его, не изменяя его структуру.

 Применимость паттерна "Стратегия":

   - Есть несколько вариантов решения задачи, и вы хотите, чтобы клиентский код мог выбирать нужный вариант.
   - Есть множество похожих классов, и различия между ними можно вынести в отдельные стратегии.
   - Вы хотите, чтобы класс был закрыт для изменений (Open/Closed Principle), но открыт для расширения,
     то есть вы можете добавлять новые стратегии, не изменяя существующий код.

 Плюсы паттерна "Стратегия":

   - Упрощение поддержки и изменения разных вариантов алгоритмов.
   - Выбор и комбинирование алгоритмов во время выполнения.
   - Снижение связанности между контекстом и конкретными стратегиями.

 Минусы паттерна "Стратегия":

   - Может создать дополнительную сложность из-за необходимости создания множества классов стратегий.
   - Клиент должен знать о различных стратегиях и выбирать их аккуратно.

 Пример использования паттерна "Стратегия" на практике:
Пусть у нас есть онлайн-магазин, в котором можно заказывать товары и оплачивать их. Для того чтобы
пользователю было удобней мы создадим несколько способов оплаты: с помощью банковской карты и с помощью ЮMoney. 
Пользователь сам может выбрать способ оплаты - это и есть паттерн "Стратегия." 
Мы всегда можем добавить и другие методы оплаты, что не повлияет на работоспособность кода.