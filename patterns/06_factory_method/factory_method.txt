Паттерн "Фабричный метод" (Factory Method) - это порождающий паттерн проектирования, предоставляющий интерфейс
для создания объектов, но оставляет подклассам решение о том, какой класс инстанцировать. Таким образом, он делегирует
создание объектов наследникам, что позволяет классам-наследникам выбирать свой собственный тип объектов для создания.

 Применимость паттерна "Фабричный метод":

   - Когда есть суперкласс с несколькими подклассами, и логика выбора конкретного подкласса
     находится в клиентском коде.
   - Когда вы хотите дать возможность подклассам предоставлять свои собственные реализации объектов.

 Плюсы паттерна "Фабричный метод":

   - Уменьшает связанность между клиентским кодом и создаваемыми объектами.
   - Поддерживает принцип "открытости/закрытости" (Open/Closed Principle) - вы можете добавлять новые подклассы
     без изменения существующего клиентского кода.
   - Позволяет использовать полиморфизм при создании объектов.

 Минусы паттерна "Фабричный метод":

   - Может привести к созданию большого количества подклассов, если необходимо создавать много различных продуктов.

 Пример использования паттерна "Фабричный метод" на практике:
 Product определяет интерфейс для продуктов, а ConcreteProduct реализует этот интерфейс. Creator определяет интерфейс 
 для создания продуктов, а ConcreteCreator реализует этот интерфейс. Метод FactoryMethod в каждом создателе возвращает 
 экземпляр соответствующего продукта. Используя паттерн Factory Method, клиент может создавать объекты, не зная их 
 конкретных классов.