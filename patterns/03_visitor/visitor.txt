Паттерн Посетитель (Visitor) - это поведенческий паттерн проектирования, который позволяет
добавлять новые операции к объектам без изменения их классов. Он достигается путем определения
внешнего объекта, называемого "посетителем", который содержит методы для обработки различных типов объектов.
Это позволяет добавлять новую функциональность, не изменяя код классов объектов.

 Применимость паттерна Посетитель:

   - Добавление новых операций к объектам: Когда вам нужно добавить новые операции к классам объектов,
     но вы не хотите изменять эти классы.

   - Разделение функциональности: Когда у вас есть множество классов с разной функциональностью,
     и вы хотите вынести эту функциональность в отдельные классы-посетители.

   - Сохранение инкапсуляции: Когда вы хотите добавить новую функциональность,
     не раскрывая внутренних деталей классов.

 Плюсы паттерна Посетитель:

   - Добавление новых операций к объектам без изменения их классов.
   - Разделение функциональности посетителей и элементов, что улучшает поддерживаемость кода.
   - Более легкое добавление новых операций, так как новый посетитель может быть создан
     без изменения существующих классов.

 Минусы паттерна Посетитель:

   - Может привести к созданию множества классов посетителей и увеличению сложности кода.
   - Некоторые операции могут быть сложно реализовать через паттерн Посетитель,
     особенно если они требуют доступа к приватным членам классов.

 Пример использования паттерна Посетитель на практике:
 Пусть у нас есть есть квадрат, круг и прямоугольник. Вы можете применить паттерн Посетитель, чтобы 
 добавить новую операцию, например, расчет площади фигуры или координат ее центра, без изменения 
 классов объектов. Каждый вид операции будет представлять отдельный посетитель, который посещает объекты 
 и выполняет соответствующую операцию.